staging_build:
  stage: build
  image: meetrix/docker-compose-sshd
  environment:
    name: staging
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - export DOCKER_HOST=ssh://$SSH_USER@$SSH_HOST
    - docker-compose -f docker-compose.yml -f docker-compose.staging.yml --env-file $ENVFILE build
  only:
    - master

staging_deploy:
  stage: deploy
  image: meetrix/docker-compose-sshd
  environment:
    name: staging
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - export DOCKER_HOST=ssh://$SSH_USER@$SSH_HOST
    - ssh $SSH_USER@$SSH_HOST "sudo mkdir -p /var/log/screenapp && sudo chmod 777 -R /var/log/screenapp"
    - ssh $SSH_USER@$SSH_HOST "kill -9 \$(ps aux | grep 'logs -f screenapp-mongodb' | grep 'docker' | awk '{print \$2}') &"
    - docker-compose -f docker-compose.yml -f docker-compose.staging.yml --env-file $ENVFILE up -d mongo
    - ssh $SSH_USER@$SSH_HOST "docker logs -f screenapp-mongodb >> /var/log/screenapp/mongo.log 2>&1 &"
    - ssh $SSH_USER@$SSH_HOST "kill -9 \$(ps aux | grep 'logs -f screenapp-mongo-express' | grep 'docker' | awk '{print \$2}') &"
    - docker-compose -f docker-compose.yml -f docker-compose.staging.yml --env-file $ENVFILE up -d mongo-express
    - ssh $SSH_USER@$SSH_HOST "docker logs -f screenapp-mongo-express >> /var/log/screenapp/mongo-express.log 2>&1 &"
    - ssh $SSH_USER@$SSH_HOST "kill -9 \$(ps aux | grep 'logs -f screenapp-server' | grep 'docker' | awk '{print \$2}') &"
    - docker-compose -f docker-compose.yml -f docker-compose.staging.yml --env-file $ENVFILE up -d server
    - ssh $SSH_USER@$SSH_HOST "docker logs -f screenapp-server >> /var/log/screenapp/server.log 2>&1 &"
  only:
    - master

production_build:
  stage: build
  image: meetrix/docker-compose-sshd
  environment:
    name: production
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - export DOCKER_HOST=ssh://$SSH_USER@$SSH_HOST
    - docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file $ENVFILE build
  only:
    - tags

production_deploy:
  stage: deploy
  image: meetrix/docker-compose-sshd
  environment:
    name: production
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - export DOCKER_HOST=ssh://$SSH_USER@$SSH_HOST
    - ssh $SSH_USER@$SSH_HOST "sudo mkdir -p /var/log/screenapp && sudo chmod 777 -R /var/log/screenapp"
    - ssh $SSH_USER@$SSH_HOST "kill -9 \$(ps aux | grep 'logs -f screenapp-server' | grep 'docker' | awk '{print \$2}') &"
    - docker-compose -f docker-compose.yml -f docker-compose.production.yml --env-file $ENVFILE up -d server
    - ssh $SSH_USER@$SSH_HOST "docker logs -f screenapp-server >> /var/log/screenapp/server.log 2>&1 &"
  only:
    - tags
